{
  "hash": "db4d0b04135901084b4b20ba777f2576",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Vectors\"\nformat:\n  html: \n    toc: false\n    section-divs: true\n    include-after-body: \n      - text: |\n          <script src=\"/js/progressive-reveal.js\"></script>\n\nengine: knitr\nfilters:\n  - webr\nwebr:\n  cell-options:\n    editor-font-scale: 0.85\n    fig-width: 6\n    fig-height: 3.7\n    out-width: \"70%\"\n---\n\n\n\n\n\n\n### Vectors {.no-hide}\n\nWatch [this video](https://vimeo.com/220490316):\n\n\n\n\n```{=html}\n<div class=\"ratio ratio-4x3\">\n<iframe src=\"https://player.vimeo.com/video/220490316\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen></iframe>\n</div>\n```\n\n\n\n\n### Create a vector\n\nIn the chunk below, create a vector that contains the integers from one to ten. Use the `c()` function.\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\n\n\n\n```\n\n## {{< fa circle-check >}}&ensp;Solution\n\n```r\nc(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n```\n\n:::\n\n\n### `:`\n\nIf your vector contains a sequence of contiguous integers, you can create it with the `:` shortcut. Run `1:10` in the chunk below. What do you get? What do you suppose `1:20` would return?\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\n\n\n\n```\n\n## {{< fa circle-check >}}&ensp;Solution\n\n```r\n1:10\n1:20\n```\n\n:::\n\n\n### `[]`\n\nYou can extract any element of a vector by placing a pair of brackets behind the vector. Inside the brackets place the number of the element that you'd like to extract. For example, `vec[3]` would return the third element of the vector named `vec`.\n\nUse the chunk below to extract the fourth element of `vec`.\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\nvec <- c(1, 2, 4, 8, 16)\n\n\n```\n\n## {{< fa circle-check >}}&ensp;Solution\n\n```r\nvec <- c(1, 2, 4, 8, 16)\nvec[4]\n```\n\n:::\n\n### More `[]`\n\nYou can also use `[]` to extract multiple elements of a vector. Place the vector `c(1,2,5)` between the brackets below. What does R return?\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\nvec <- c(1, 2, 4, 8, 16)\nvec[]\n\n\n```\n\n## {{< fa circle-check >}}&ensp;Solution\n\n```r\nvec <- c(1, 2, 4, 8, 16)\nvec[c(1,2,5)]\n```\n\n:::\n\n\n### Names\n\nIf the elements of your vector have names, you can extract them by name. To do so place a name or vector of names in the brackets behind a vector. Surround each name with quotation marks, e.g. `vec2[c(\"alpha\", \"beta\")]`.\n\nExtract the element named gamma from the vector below.\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\nvec2 <- c(alpha = 1, beta = 2, gamma = 3)\n\n\n```\n\n## {{< fa circle-check >}}&ensp;Solution\n\n```r\nvec2 <- c(alpha = 1, beta = 2, gamma = 3)\nvec2[\"gamma\"]\n```\n\n:::\n\n\n### Vectorised operations\n\nPredict what the code below will return. Then look at the result.\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\nc(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) + c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n\n\n```\n\n:::\n\n###\n\nGood job! Like many R functions, R's math operators are vectorized: they're designed to work with vectors by repeating the operation for each pair of elements.\n\n### Vector recycling\n\nPredict what the code below will return. Then look at the result.\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\n1 + c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n\n\n```\n\n:::\n\n###\n\nGood job! Whenever you try to work with vectors of varying lengths (recall that `1` is a vector of length one), R will repeat the shorter vector as needed to compute the result.\n\n##\n\n\n\n\n<section id=\"buttons\">\n<button id=\"continueButton\" class=\"btn btn-primary float-start me-2\">Continue</button>\n<a id=\"nextTopicButton\" class=\"btn btn-danger disabled\" href=\"05-types.html\" role=\"button\">Next topic</a>\n<button id=\"resetButton\" class=\"btn btn-outline-warning btn-sm float-end\">Start over</button>\n</section>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}