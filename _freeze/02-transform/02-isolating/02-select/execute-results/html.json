{
  "hash": "b0c74825d1c5969ce506f5a203bcfe2a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"`select()`\"\nformat:\n  html: \n    toc: false\n    section-divs: true\n    include-after-body: \n      - text: |\n          <script src=\"/js/progressive-reveal.js\"></script>\n          <script src=\"/js/bootstrapify.js\"></script>\n\nengine: knitr\nfilters:\n  - webr\nwebr:\n  packages:\n    - babynames\n    - dplyr\n  cell-options:\n    editor-font-scale: 0.85\n    fig-width: 6\n    fig-height: 3.7\n    out-width: \"70%\"\n---\n\n\n\n\n\n\n`select()` extracts columns of a data frame and returns the columns as a new data frame. To use `select()`, pass it the name of a data frame to extract columns from, and then the names of the columns to extract. The column names do not need to appear in quotation marks or be prefixed with a `$`; `select()` knows to find them in the data frame that you supply.\n\n### Exercise: `select()`\n\nUse the example below to get a feel for `select()`. Can you extract just the `name` column? How about the `name` and `year` columns? How about all of the columns except `prop`?\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\nselect(babynames, name, sex)\n\n\n```\n\n## {{< fa circle-check >}}&ensp;Solution\n\n```r\nselect(babynames, name)\nselect(babynames, name, year)\nselect(babynames, year, sex, name, n)\n```\n\n:::\n\n\n### `select()` helpers\n\nYou can also use a series of helpers with `select()`. For example, if you place a minus sign before a column name, `select()` will return every column but that column. Can you predict how the minus sign will work here?\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\nselect(babynames, -c(n, prop))\n\n\n```\n\n:::\n\nThe table below summarizes the other `select()` helpers that are available in {dplyr}. Study it, and then click \"Continue\" to test your understanding.\n\n| Helper function     | Use                                          | Example                                         |\n|-------------------|------------------------|------------------------------|\n| **`-`**             | Columns except                               | `select(babynames, -prop)`                      |\n| **`:`**             | Columns between (inclusive)                  | `select(babynames, year:n)`                     |\n| **`contains()`**    | Columns that contains a string               | `select(babynames, contains(\"n\"))`              |\n| **`ends_with()`**   | Columns that ends with a string              | `select(babynames, ends_with(\"n\"))`             |\n| **`matches()`**     | Columns that matches a regex                 | `select(babynames, matches(\"n\"))`               |\n| **`num_range()`**   | Columns with a numerical suffix in the range | Not applicable with `babynames`                 |\n| **`one_of()`**      | Columns whose name appear in the given set   | `select(babynames, one_of(c(\"sex\", \"gender\")))` |\n| **`starts_with()`** | Columns that starts with a string            | `select(babynames, starts_with(\"n\"))`           |\n\n: {tbl-colwidths=\"[15, 35, 35]\" .striped .hover .table-sm}\n\n\n### `select()` quiz\n\n::: {.callout-note appearance=\"simple\" icon=false .question}\n\n**Which of these is not a way to select the `name` and `n` columns together?**\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_1\" onsubmit=\"return validate_form_1()\" method=\"post\">\n<input type=\"radio\" name=\"answer_1\" id=\"answer_1_1\" value=\"select(babynames, -c(year, sex, prop))\"/>\n<label>select(babynames, -c(year, sex, prop))</label>\n<br/>\n<input type=\"radio\" name=\"answer_1\" id=\"answer_1_2\" value=\"select(babynames, starts_with(&quot;n&quot;))\"/>\n<label>select(babynames, starts_with(\"n\"))</label>\n<br/>\n<input type=\"radio\" name=\"answer_1\" id=\"answer_1_3\" value=\"select(babynames, ends_with(&quot;n&quot;))\"/>\n<label>select(babynames, ends_with(\"n\"))</label>\n<br/>\n<input type=\"radio\" name=\"answer_1\" id=\"answer_1_4\" value=\"select(babynames, one_of(c(&quot;name&quot;, &quot;n&quot;, &quot;chengy&quot;)))\"/>\n<label>select(babynames, one_of(c(\"name\", \"n\", \"chengy\")))</label>\n<br/>\n<input type=\"radio\" name=\"answer_1\" id=\"answer_1_5\" value=\"select(babynames, name:n)\"/>\n<label>select(babynames, name:n)</label>\n<br/>\n<input type=\"submit\" value=\"Submit answer\"/>\n<div id=\"result_1\"></div>\n</form>\n<script>function validate_form_1() {var x, text; var x = document.forms['form_1']['answer_1'].value;if (x == 'select(babynames, ends_with(\"n\"))'){text = 'Correct!';} else {text = 'I have a different answer';} document.getElementById('result_1').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1;res1 = document.getElementById('result_1').innerText == 'Correct!';text = res1;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n:::\n\n\n\n:::\n\n##\n\n\n\n\n::: {.cell layout-align=\"center\"}\n<section id=\"buttons\">\n<button id=\"continueButton\" class=\"btn btn-primary float-start me-2\">Continue</button>\n<a id=\"nextTopicButton\" class=\"btn btn-danger disabled\" href=\"03-filter.html\" role=\"button\">Next topic</a>\n<button id=\"resetButton\" class=\"btn btn-outline-warning btn-sm float-end\">Start over</button>\n</section>\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}