{
  "hash": "c169439c65d92477c21f5fd7f1aa69d2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Line plots\"\nformat:\n  html: \n    toc: false\n    section-divs: true\n    include-after-body: \n      - text: |\n          <script src=\"/js/progressive-reveal.js\"></script>\n---\n\n\n\n\n\nA **line graph** displays a functional relationship between two continuous variables. A **map**  displays spatial data. The two may seem different, but they are made in similar ways. This tutorial will examine them both.\n\nIn this tutorial, you'll learn how to:\n\n* Make new types of line plots with `geom_step()`, `geom_area()`, `geom_path()`, and `geom_polygon()`\n* Avoid \"whipsawing\" with the group aesthetic\n* Find and plot map data with `geom_sf()`\n* Transform a coordinate system into a map projection with `coord_sf()`\n\nThe tutorial is adapted from [_R for Data Science_](https://r4ds.had.co.nz/) by Hadley Wickham and Garrett Grolemund, published by Oâ€™Reilly Media, Inc., 2016, ISBN: 9781491910399. You can purchase the book at [shop.oreilly.com](http://shop.oreilly.com/product/0636920034407.do).\n\nThe tutorial uses the {ggplot2}, {sf}, and {dplyr} packages, which have been pre-loaded for your convenience.\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n<section id=\"buttons\">\n<button id=\"continueButton\" class=\"btn btn-primary float-start me-2\">Continue</button>\n<a id=\"nextTopicButton\" class=\"btn btn-danger disabled\" href=\"01-line-graphs.html\" role=\"button\">Next topic</a>\n<button id=\"resetButton\" class=\"btn btn-outline-warning btn-sm float-end\">Start over</button>\n</section>\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}