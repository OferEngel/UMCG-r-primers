{
  "hash": "41e00beb7f7cafecab7956c9627b97bc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Beyond boxplots\"\nformat:\n  html: \n    toc: false\n    section-divs: true\n    include-after-body: \n      - text: |\n          <script src=\"/js/progressive-reveal.js\"></script>\n\nengine: knitr\nfilters:\n  - webr\nwebr:\n  packages:\n    - ggplot2\n  cell-options:\n    editor-font-scale: 0.85\n    fig-width: 6\n    fig-height: 3.7\n    out-width: \"70%\"\n---\n\n\n\n\n\n\n### `geom_dotplot()` {.no-hide}\n\nBoxplots provide a quick way to represent a distribution, but they leave behind a lot of information. {ggplot2} supplements boxplots with two geoms that show more information.\n\nThe first is `geom_dotplot()`. If you set the `binaxis` parameter of `geom_dotplot()` to `\"y\"`, `geom_dotplot()` behaves like `geom_boxplot()`, display a separate distribution for each group of data.\n\nHere each group functions like a vertical histogram. Add the parameter `stackdir = \"center\"` then re-run the code. Can you interpret the results?\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\nggplot(data = mpg) +\n  geom_dotplot(mapping = aes(x = class, y = hwy), binaxis = \"y\", \n               dotsize = 0.5, binwidth = 1)\n\n\n```\n\n\n## {{< fa circle-check >}}&ensp;Solution\n\n```r\nggplot(data = mpg) +\n  geom_dotplot(mapping = aes(x = class, y = hwy), binaxis = \"y\", \n               dotsize = 0.5, binwidth = 1, stackdir = \"center\")\n```\n\n:::\n\n###\n\nGood job! When you set `stackdir = \"center\"`, `geom_dotplot()` arranges each row of dots symmetrically around the $x$ value. This layout will help you understand the next geom.\n\nAs in the histogram tutorial, it takes a lot of tweaking to make a dotplot look right. As a result, I tend to only use them when I want to make a point.\n\n\n### `geom_violin()`\n\n`geom_violin()` provides a second alternative to `geom_boxplot()`. A violin plot uses densities to draw a smoothed version of the centered dotplot you just made.\n\nYou can think of a violin plot as an outline drawn around the edges of a centered dotplot. Each \"violin\" spans the range of the data. The violin is thick where there are many values, and thin where there are few.\n\nConvert the plot below from a boxplot to a violin plot. Note that violin plots do not use the parameters you saw for dotplots.\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\nggplot(data = mpg) +\n  geom_boxplot(mapping = aes(x = class, y = hwy))\n\n\n```\n\n## {{< fa circle-check >}}&ensp;Solution\n\n```r\nggplot(data = mpg) +\n  geom_violin(mapping = aes(x = class, y = hwy))\n```\n\n:::\n\n###\n\n'Good job! Another way to interpret a violin plot is to mentally \"push\" the width of each violin all to one side (so the other side is a straight line). The result would be a density (e.g. `geom_density()`) turned on its side for each distribution).\n\n### Exercise 7: Violin plots\n\nYou can further enhance violin plots by adding the parameter `draw_quantiles = c(0.25, 0.5, 0.75)`. This will cause ggplot2 to draw horizontal lines across the violins at the 25th, 50th, and 75th percentiles. These are the same three horizontal lines that are displayed in a boxplot (the 25th and 75th percentiles are the bounds of the box, the 50th percentile is the median).\n\nAdd these lines to the violin plot below.\n\n::: {.panel-tabset}\n## {{< fa code >}}&ensp;Interactive editor\n\n```{webr-r}\nggplot(data = mpg) +\n  geom_violin(mapping = aes(x = class, y = hwy))\n\n\n```\n\n## {{< fa circle-check >}}&ensp;Solution\n\n```r\nggplot(data = mpg) +\n  geom_violin(mapping = aes(x = class, y = hwy), draw_quantiles = c(0.25, 0.5, 0.75))\n```\n\n:::\n\n###\n\nGood job! Can you predict how you would use `draw_quantiles` to draw a horizontal line at a different percentile, like the 60th percentile?.\n\n\n##\n\n\n\n\n::: {.cell layout-align=\"center\"}\n<section id=\"buttons\">\n<button id=\"continueButton\" class=\"btn btn-primary float-start me-2\">Continue</button>\n<a id=\"nextTopicButton\" class=\"btn btn-danger disabled\" href=\"05-counts.html\" role=\"button\">Next topic</a>\n<button id=\"resetButton\" class=\"btn btn-outline-warning btn-sm float-end\">Start over</button>\n</section>\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}